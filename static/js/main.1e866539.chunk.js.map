{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/store.js","components/NoteForm.js","pages/AddNote.js","components/Note.js","pages/View-Notes.js","components/Nav-Bar.js","App.js","index.js"],"names":["DELETE_NOTE","UPDATE_TOGGLE","FORM_CHANGE","UPDATE_NOTE","CREATE_NOTE","initialState","toggle","formOpen","noteId","Number","form","id","title","description","notes","JSON","parse","localStorage","getItem","reducers","state","action","type","newNoteArr","filter","note","note_id","setItem","stringify","formData","updatedNotes","map","newNote","length","createStore","NoteForm","props","dispatch","useDispatch","useSelector","handleChange","document","querySelector","value","htmlFor","className","name","onChange","update","onClick","e","querySelectorAll","AddNote","Note","preventDefault","target","ViewNotes","updateToggle","NavBar","to","App","store","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"uMAAaA,EAAc,cACdC,EAAgB,gBAChBC,EAAc,cACdC,EAAc,cACdC,EAAc,cCIrBC,EAAe,CACnBC,OAAQ,CACNC,UAAS,EACTC,OAAQC,QAEVC,KAAM,CACJC,GAAIF,OACJG,MAAO,GACPC,YAAa,IAEfC,MAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UAAaH,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,IA0EnFC,EAvES,WAAmC,IAAlCC,EAAiC,uDAAzBf,EAAcgB,EAAW,uCACxD,OAAQA,EAAOC,MACb,KAAKtB,EACH,IAAIuB,EAAaH,EAAMN,MAAMU,QAAO,SAAAC,GAClC,OAAOA,EAAKd,KAAOU,EAAOK,WAG5B,OADAT,aAAaU,QAAQ,QAASZ,KAAKa,UAAUL,IACtC,2BACFH,GADL,IAEEN,MAAOS,IAGX,KAAKtB,EACH,OAA6B,IAA1BmB,EAAMd,OAAOC,SACd,2BACKa,GADL,IAEEd,OAAO,CACLC,UAAU,EACVC,OAAQC,QAEVC,KAAM,CACJC,GAAIF,OACJG,MAAO,GACPC,YAAa,MAIV,2BACFO,GADL,IAEEd,OAAO,CACLC,UAAU,EACVC,OAAQa,EAAOK,WAKrB,KAAKxB,EACH,kCACKkB,GADL,IAEEV,KAAMW,EAAOQ,WAGjB,KAAK1B,EACH,IAAI2B,EAAeV,EAAMN,MAAMiB,KAAI,SAAAN,GACjC,OAAGA,EAAKd,KAAOS,EAAMV,KAAKC,GACjB,eAAKS,EAAMV,MAGZe,KAIT,OADDR,aAAaU,QAAQ,QAASZ,KAAKa,UAAUE,IAC5C,2BACKV,GADL,IAEEN,MAAOgB,IAGZ,KAAK1B,EACF,IAAI4B,EAAUZ,EAAMN,MAGpB,OAFAkB,EAAQA,EAAQC,QAAhB,2BAA+Bb,EAAMV,MAArC,IAA2CC,GAAIqB,EAAQC,OAAS,IAChEhB,aAAaU,QAAQ,QAASZ,KAAKa,UAAUI,IAC7C,2BACKZ,GADL,IAEEN,MAAOkB,IAGd,QACE,OAAOZ,ICrFEc,cAAYf,G,OCCZ,SAASgB,EAASC,GAC/B,IAAMC,EAAWC,cACXlB,EAAQmB,aAAY,SAAAnB,GAAK,OAAIA,KAEnC,SAASoB,IACP,IAAIX,EAAW,CACXlB,GAAIS,EAAMV,KAAKC,GACfC,MAAO6B,SAASC,cAAc,eAAeC,MAC7C9B,YAAa4B,SAASC,cAAc,iBAAiBC,OAEzDN,EAAS,CAACf,KAAMpB,EAAa2B,aAU/B,OACE,uBAAMlB,GAAG,gBAAT,UACE,uBAAOiC,QAAQ,aAAf,mBACA,uBAAOtB,KAAK,OAAOuB,UAAU,aAAaC,KAAK,aAAaH,MAAOvB,EAAMV,KAAKE,MAAOmC,SAAUP,IAC/F,uBAAOI,QAAQ,eAAf,0BACA,0BAAUC,UAAU,eAAgBC,KAAK,eAAeH,MAAOvB,EAAMV,KAAKG,YAAakC,SAAUP,IAChGJ,EAAMY,OAAS,sBAAKH,UAAU,SAAf,UACd,wBAAQvB,KAAK,SAASqB,MAAOvB,EAAMV,KAAKC,GAAIsC,QAflD,WACEZ,EAAS,CAACf,KAAMnB,KAcZ,oBACA,wBAAQwC,MAAOvB,EAAMV,KAAKC,GAAIsC,QAAS,SAACC,GAAKd,EAAMY,OAAOE,IAA1D,0BAEA,wBAAQ5B,KAAK,SAAS2B,QAf5B,WACEZ,EAAS,CAACf,KAAKlB,IACfqC,SAASU,iBAAiB,eAAeR,MAAQ,GACjDF,SAASU,iBAAiB,iBAAiBR,MAAQ,IAY/C,uBCzBOS,MALf,WACI,OACI,cAACjB,EAAD,KCFO,SAASkB,EAAKjB,GACzB,IAAMC,EAAWC,cAQjB,OACI,sBAAKO,UAAU,OAAf,UACI,6BAAKT,EAAMX,KAAKb,QAChB,4BAAIwB,EAAMX,KAAKZ,cACf,wBAAQ8B,MAAOP,EAAMX,KAAKd,GAAIsC,QAVtC,SAAoBC,GAChBA,EAAEI,iBACF,IAAI5B,EAAUX,KAAKC,MAAMkC,EAAEK,OAAOZ,OAClCN,EAAS,CAAEf,KAAMtB,EAAa0B,aAO1B,oBACA,wBAAQiB,MAAOP,EAAMX,KAAKd,GAAIsC,QAAS,SAACC,GAAKd,EAAMY,OAAOE,IAA1D,qBCXG,SAASM,IACpB,IAAMnB,EAAWC,cACXlB,EAAQmB,aAAY,SAAAnB,GAAK,OAAIA,KAEnC,SAASqC,EAAaP,GAClBA,EAAEI,iBACF,IAAI5B,EAAUX,KAAKC,MAAMkC,EAAEK,OAAOZ,OAClC,IAA6B,IAA1BvB,EAAMd,OAAOC,UAAqBa,EAAMd,OAAOE,SAAWkB,EACzDW,EAAS,CAAEf,KAAMrB,EAAeyB,gBAE/B,KAA6B,IAA1BN,EAAMd,OAAOC,UAAqBa,EAAMd,OAAOE,SAAWkB,EAC/D,MAAO,mCACJ,IAA6B,IAA1BN,EAAMd,OAAOC,SAAmB,CACrC8B,EAAS,CAAEf,KAAMrB,EAAeyB,YAChC,IAAIG,EAAWT,EAAMN,MAAMY,EAAQ,GACnCW,EAAS,CAACf,KAAMpB,EAAa2B,eAGrC,OACI,qBAAKlB,GAAG,kBAAR,SACKS,EAAMN,MAAMiB,KAAI,SAAAN,GACb,OAAIA,EAAKd,KAAOS,EAAMd,OAAOE,OAClB,cAAC2B,EAAD,CAAUa,OAAQS,IAElB,cAACJ,EAAD,CAAM5B,KAAMA,EACnBuB,OAAQS,SC7Bb,SAASC,IACpB,OACI,sBAAK/C,GAAG,MAAR,UACI,cAAC,IAAD,CAAMgD,GAAG,aAAT,oBACA,cAAC,IAAD,CAAMA,GAAG,cAAT,qB,MCIG,SAASC,IAEpB,OACI,eAAC,IAAD,WACI,mCACI,kDACA,cAACF,EAAD,OAEJ,qBAAK/C,GAAG,iBAAR,SACI,cAAC,IAAD,CAAUkD,MAAOA,EAAjB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWZ,IACtC,cAAC,IAAD,CAAOW,KAAK,cAAcC,UAAWR,IACrC,cAAC,IAAD,CAAOO,KAAK,aAAaC,UAAWZ,cCpB5Da,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACP,EAAD,MAEJnB,SAAS2B,eAAe,W","file":"static/js/main.1e866539.chunk.js","sourcesContent":["export const DELETE_NOTE = \"DELETE_NOTE\";\nexport const UPDATE_TOGGLE = \"UPDATE_TOGGLE\";\nexport const FORM_CHANGE = \"FORM_CHANGE\";\nexport const UPDATE_NOTE = \"UPDATE_NOTE\";\nexport const CREATE_NOTE = \"CREATE_NOTE\";","import {\n  DELETE_NOTE,\n  UPDATE_TOGGLE, \n  FORM_CHANGE,\n  UPDATE_NOTE,\n  CREATE_NOTE\n} from \"./actions\";\n\nconst initialState = {\n  toggle: {\n    formOpen:false,\n    noteId: Number\n  },\n  form: {\n    id: Number,\n    title: \"\",\n    description: \"\"\n  },\n  notes: JSON.parse(localStorage.getItem(\"notes\")) ?  JSON.parse(localStorage.getItem(\"notes\")) : []\n};\n\nexport const reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case DELETE_NOTE:\n      let newNoteArr = state.notes.filter(note => {\n        return note.id !== action.note_id;\n      })\n      localStorage.setItem(\"notes\", JSON.stringify(newNoteArr))\n      return {\n        ...state,\n        notes: newNoteArr\n      };\n\n    case UPDATE_TOGGLE:\n      if(state.toggle.formOpen === true)\n        return{\n          ...state,\n          toggle:{\n            formOpen: false,\n            noteId: Number\n          },\n          form: {\n            id: Number,\n            title: \"\",\n            description: \"\"\n          }\n        }\n        else{\n        return {\n          ...state,\n          toggle:{\n            formOpen: true,\n            noteId: action.note_id\n          }\n        }\n      }\n\n      case FORM_CHANGE:\n        return{\n          ...state,\n          form: action.formData\n        }\n\n      case UPDATE_NOTE:\n        let updatedNotes = state.notes.map(note =>{\n          if(note.id === state.form.id){\n            return ({...state.form})\n          }\n         else{\n           return note\n         }\n        })\n        localStorage.setItem(\"notes\", JSON.stringify(updatedNotes))\n         return{\n           ...state,\n           notes: updatedNotes\n         }\n\n      case CREATE_NOTE: \n         let newNote = state.notes\n         newNote[newNote.length] = ({...state.form, id: newNote.length + 1 })\n         localStorage.setItem(\"notes\", JSON.stringify(newNote))\n         return{\n           ...state,\n           notes: newNote\n         }\n        \n    default:\n      return state;\n  }\n};\n\nexport default reducers;","import { createStore } from 'redux';\nimport reducers from './reducers';\n\nexport default createStore(reducers);","import { React } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {FORM_CHANGE, UPDATE_NOTE, CREATE_NOTE } from '../utils/actions';\n\nexport default function NoteForm(props) {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n\n  function handleChange(){\n    let formData = {\n        id: state.form.id,\n        title: document.querySelector(\".note-title\").value,\n        description: document.querySelector(\".note-content\").value,\n    }\n    dispatch({type: FORM_CHANGE, formData})\n  }\n  function updateNote(){\n    dispatch({type: UPDATE_NOTE})\n  }\n  function createNote(){\n    dispatch({type:CREATE_NOTE})\n    document.querySelectorAll(\".note-title\").value = \"\"\n    document.querySelectorAll(\".note-content\").value = \"\"\n  }\n  return (\n    <form id=\"new-note-form\">\n      <label htmlFor=\"note-title\">Title</label>\n      <input type=\"text\" className=\"note-title\" name=\"note-title\" value={state.form.title} onChange={handleChange}></input>\n      <label htmlFor=\"note-content\">Note Content</label>\n      <textarea className=\"note-content\"  name=\"note-content\" value={state.form.description} onChange={handleChange}></textarea>\n      {props.update ? <div className=\"footer\">\n        <button type=\"submit\" value={state.form.id} onClick={updateNote}>Update</button>\n        <button value={state.form.id} onClick={(e)=>{props.update(e)}}>Nevermind</button>\n      </div> :\n        <button type=\"submit\" onClick={createNote}>Create</button>}\n    </form>\n  )\n}","import React from 'react';\nimport NoteForm from '../components/NoteForm';\n\n\nfunction AddNote() {    \n    return (\n        <NoteForm/>\n    )\n}\nexport default AddNote;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { DELETE_NOTE } from '../utils/actions';\n\nexport default function Note(props) {\n    const dispatch = useDispatch();\n\n    function deleteNote(e) {\n        e.preventDefault();\n        let note_id = JSON.parse(e.target.value)\n        dispatch({ type: DELETE_NOTE, note_id });\n    }\n  \n    return (\n        <div className=\"note\">\n            <h2>{props.note.title}</h2>\n            <p>{props.note.description}</p>\n            <button value={props.note.id} onClick={deleteNote}>Delete</button>\n            <button value={props.note.id} onClick={(e)=>{props.update(e)}}>Edit</button>\n        </div>\n    )\n}","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { UPDATE_TOGGLE, FORM_CHANGE } from '../utils/actions';\nimport Note from '../components/Note';\nimport NoteForm from '../components/NoteForm';\n\nexport default function ViewNotes() {\n    const dispatch = useDispatch();\n    const state = useSelector(state => state);\n\n    function updateToggle(e) {\n        e.preventDefault();\n        let note_id = JSON.parse(e.target.value)\n        if(state.toggle.formOpen === true && state.toggle.noteId === note_id){\n            dispatch({ type: UPDATE_TOGGLE, note_id });\n        }\n        else if(state.toggle.formOpen === true && state.toggle.noteId !== note_id){\n           return \"can only edit one note at a time\"\n        }else if(state.toggle.formOpen === false){\n            dispatch({ type: UPDATE_TOGGLE, note_id });\n            let formData = state.notes[note_id-1]\n            dispatch({type: FORM_CHANGE, formData});\n        }\n    }\n    return (\n        <div id=\"notes-container\">\n            {state.notes.map(note => {\n                if (note.id === state.toggle.noteId) {\n                    return <NoteForm update={updateToggle}/>\n                } else {\n                    return <Note note={note}\n                    update={updateToggle} />\n                }\n            })}\n        </div>\n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function NavBar(){\n    return (\n        <div id=\"nav\">\n            <Link to=\"/add-notes\">Create</Link>\n            <Link to=\"/view-notes\">View</Link>\n        </div>\n    )\n}","import React from 'react';\nimport { BrowserRouter as HashRouter, Route, Switch } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './utils/store';\n\nimport AddNote from './pages/AddNote';\nimport ViewNotes from './pages/View-Notes';\nimport NavBar from './components/Nav-Bar';\nimport './style.css';\n\nexport default function App() {\n\n    return (\n        <HashRouter>\n            <header>\n                <h1>Redux Note-Taker</h1>\n                <NavBar/>\n            </header>\n            <div id=\"component-body\">\n                <Provider store={store}>\n                    <Switch>\n                        <Route exact path=\"/Redux\" component={AddNote} />\n                        <Route path=\"/view-notes\" component={ViewNotes} />\n                        <Route path=\"/add-notes\" component={AddNote} />\n                    </Switch>\n                </Provider>\n            </div>\n        </HashRouter>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}